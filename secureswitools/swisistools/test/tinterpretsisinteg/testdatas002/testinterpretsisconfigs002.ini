// Identifies the manufacturer of a device. If this is not enumerated in TManufacturer, 
// then the manufacturer must obtain a value from the Symbian registry.
//
// <numeric type>
MANUFACTURER = 0x00000002

// The device specific hardware version number, as defined by the device manufacturer.
//
// <numeric type>
MANUFACTURERHARDWAREREV = 0x100

// The device specific version number, as defined by the device manufacturer.
//
// <numeric type>
MANUFACTURERSOFTWAREREV = 0x200

// The device specific software version number, as defined by the device manufacturer.
//
// <numeric type>
MANUFACTURERSOFTWAREBUILD = 300

// This is device specific model number, as defined by the device manufacturer.
//
// <numeric type>
MODEL = 0x101FB3E8

// This is the device specific UID, It is unique to the class /model of device. 
// A value must be obtained from Symbian's UID registry for this attribute.
//
// <numeric type>
MACHINEUID = 0x20000606

// The Symbian OS specified device family identifier. If the device family is not
// one of those enumerated by TDeviceFamily, then the licensee must obtain a UID
// from Symbian for this attribute.
//
// <numeric type>
DEVICEFAMILY = 0x700

// The Symbian OS specified device family version
//
// <numeric type>
DEVICEFAMILYREV = 0x700

// The CPU architecture used by this device. The values are enumerated by TCPU.
//
// <numeric type>
CPU = 0

// A revision number for the CPU architecture.
//
// <numeric type>
CPUARCH = 0

// This is the default ABI used by CPU for user applications. The values are 
// enumerated by HALData::TCPUABI.
//
// <numeric type>
CPUABI = 1

// The processor speed in KHz.
//
// <numeric type>
CPUSPEED = 999

// The time between system ticks, in microseconds.
//
// <numeric type>
SYSTEMTICKPERIOD = 2

// The total system RAM, in bytes.
//
// <numeric type>
MEMORYRAM = 999

// The currently free system RAM.
//
// <numeric type>
MEMORYRAMFREE = 0x11223344

// The total System ROM, in bytes.
//
// <numeric type>
MEMORYROM = 0xDEADBEEF

// The MMU page size in bytes.
//
// <numeric type>
MEMORYPAGESIZE = 1024

// Indicates whether a backup power supply is available. It has the 
// values: 0 = the device does not support (or need) a backup battery 
// source; 1 = a backup batter source is present. This is dynamic 
// and readonly
//
// <numeric type> / <boolean type> / <yes/no type>
POWERBACKUP = false

// A bitmask that describes the available keyboard types (it may support more than one).
//
// <numeric type>
KEYBOARD = 1

// (No documentation)
//
// <numeric type>
KEYBOARDDEVICEKEYS = 3

// (No documentation)
//
// <numeric type>
KEYBOARDAPPKEYS = 0

// Indicates whether the device can produce a click sound for each keypress.
// It has the values: 0 = the device cannot produce a click sound for each 
// keypress; 1 = the device can produce a click sound.
//
// <numeric type> / <boolean type> / <yes/no type>
KEYBOARDCLICK = 1 // Can also be true/false

// The maximum value for EKeyboardClickVolume
//
// <numeric type>
KEYBOARDCLICKVOLUMEMAX = 10

// The screen horizontal dimension in pixels.
//
// <numeric type>
DISPLAYXPIXELS = 640

// The screen vertical dimension in pixels.
//
// <numeric type>
DISPLAYYPIXELS = 480

// The screen horizontal dimension in twips.
//
// <numeric type>
DISPLAYXTWIPS = 3200

// The screen vertical dimension in twips.
//
// <numeric type>
DISPLAYYTWIPS  =    1440 

// The number of hues (colors or shades of grey) displayable on the screen.
//
// <numeric type>
DISPLAYCOLORS = 0x2000

// The maximum value for EDisplayContrast
//
// <numeric type>
DISPLAYCONTRASTMAX =    0x766

// Indicates whether there is a backlight on the device.
// It has the values: 0 = there is no screen backlight; 
// 1 = a screen backlight is present.
//
// <numeric type> / <boolean type> / <yes/no type>
BACKLIGHT = false

// Indicates whether a pen or digitizer is available for input.
// It has the values: 0 = a pen/digitizer is not available for 
// input; 1 = a pen/digitizeris present.
//
// <numeric type> / <boolean type> / <yes/no type>
PEN = false

// The pen/digitizer horizontal resolution, in pixels.
//
// <numeric type>
PENX = 0

// The is the pen/digitizer vertical resolution, in pixels.
//
// <numeric type>
PENY = 0

// Indicates whether a pen tap will turn the display on.
// It has the values: 0 = a pen tap has no effect; 1 = a pent tap or 
// press enables the display.
//
// <numeric type> / <boolean type> / <yes/no type>
PENDISPLAYON = no

// Indicates whether the device can produce a click sound for each pen tap.
// 
// It has the values: 0 = the device cannot produce a click sound 1 = 
// production of a click sound is supported by the device.
//
// <numeric type> / <boolean type> / <yes/no type>
PENCLICK = yes

// The maximum value for EPenClickVolume.
//
// <numeric type>
PENCLICKVOLUMEMAX = 10

// Indicates whether a mouse is available for input.
// 
// It has the values: 0 = there is no mouse available
// or pen/digitizer present; 1 = a mouse is available for input.
//
// <numeric type> / <boolean type> / <yes/no type>
MOUSE = false

// The mouse horizontal resolution, in pixels.
//
// <numeric type>
MOUSEX = 0

// The mouse vertical resolution, in pixels.
//
// <numeric type>
MOUSEY = 0

// The number of buttons on the mouse.
//
// <numeric type>
MOUSEBUTTONS = 1

// Indicates whether the device has a case switch, that actions when the case opens and closes.
// It has values: 0 = no; 1 = yes.
//
// <numeric type> / <boolean type> / <yes/no type>
CASESWITCH = true

// The number of LEDs on the device.
//
// <numeric type>
LEDS = 2

// Indicates how the phone hardware is connected.
//
// It has the values: 0 = phone hardware is not permanently 
// connected; 1 = phone hardware is permanently connected.
//
// <numeric type> / <boolean type> / <yes/no type>
INTEGRATEDPHONE  = false

// (Undocumented)
//
// <numeric type>
DISPLAYBRIGHTNESS = 10

// (Undocumented)
//
// <numeric type>
DISPLAYBRIGHTNESSMAX  = 10

// Indicates the state of the keyboard backlight.
// It has the values: 0 = keyboard backlight is off; 1 = keyboard backlight is on.
//
// <numeric type> / <boolean type> / <yes/no type>
KEYBOARDBACKLIGHTSTATE = 0

// Power supply to an accessory port.
//
// It has the values: 0 = turn off power to an accessory port on the device;
// 1 = turn on power.
//
// <numeric type> / <boolean type> / <yes/no type>
ACCESSORYPOWER = false

// Defines the system drive (0-25)
//
// <numeric type>
SYSTEMDRIVE = 2 // EDriveC

// Indicates whether hardware floating point is available, and what type.
//
// <numeric type>
FPHARDWARE = 0

// The number of HAL attributes.
//
// <numeric type>
NUMHALATTRIBUTES = 10

// Language code for the device
//
// <numeric type>
LANGUAGE = 3 //GERMAN
